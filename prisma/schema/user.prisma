model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Auth relations
  accounts Account[]
  sessions Session[]

  // Workspace relations
  workspaces WorkspaceMember[]

  // Team relations
  teams        TeamMember[] @relation("TeamMembers")
  createdTeams Team[]       @relation("TeamCreator")

  // Task relations
  assignedTasks Task[] @relation("TaskAssignee")
  createdTasks  Task[] @relation("TaskCreator")

  // Project relations
  projects            Project[]           @relation("ProjectMembers")
  ownedProjects       Project[]           @relation("ProjectOwner")
  sentInvitations     ProjectInvitation[] @relation("SentInvitations")
  receivedInvitations ProjectInvitation[] @relation("ReceivedInvitations")

  // Activity & Content relations
  activities  Activity[]
  timeEntries TimeEntry[]
  comments    Comment[]
  mentions    Mention[]
  attachments Attachment[] @relation("Uploads")

  // Notification relations
  notifications           Notification[]
  notificationPreferences NotificationPreference[]
  pushSubscriptions       PushSubscription[]
  notificationRateLimits  NotificationRateLimit[]
  createdTemplates        NotificationTemplate[]     @relation("CreatedTemplates")
  updatedTemplates        NotificationTemplate[]     @relation("UpdatedTemplates")
  notificationAnalytics   NotificationAnalytics[]
  notificationStats       NotificationStats[]
  notificationBatches     NotificationBatch[]
  batchingRules           NotificationBatchingRule[]
  notificationFilters     NotificationFilter[]

  // Calendar & Email
  calendarIntegrations CalendarIntegration[]
  emailLogs            EmailLog[]            @relation("ReceivedEmails")

  // Audit & Analytics
  auditLogs   AuditLog[]
  bulkActions BulkAction[]

  // Template & Campaign relations
  templateVersions       NotificationTemplateVersion[] @relation("VersionCreator")
  abTests                ABTest[]                      @relation("TestCreator")
  abTestEvents           ABTestEvent[]
  scheduledNotifications ScheduledNotification[]       @relation("NotificationCreator")
  templateAnalytics      TemplateAnalytics[]
  campaigns              Campaign[]                    @relation("CampaignCreator")
  campaignEvents         CampaignEvent[]

  ABTest ABTest[]

  NotificationTemplateVersion NotificationTemplateVersion[]

  ScheduledNotification ScheduledNotification[]

  Campaign Campaign[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
