model Comment {
  id        String   @id @default(cuid())
  content   String
  taskId    String
  userId    String
  replyToId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task      Task       @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  replyTo   Comment?   @relation("CommentReplies", fields: [replyToId], references: [id], onDelete: SetNull)
  replies   Comment[]  @relation("CommentReplies")
  mentions  Mention[]
  emailLogs EmailLog[]

  @@index([taskId])
  @@index([userId])
  @@index([replyToId])
  @@index([createdAt])
}

model Mention {
  id        String   @id @default(cuid())
  taskId    String
  userId    String
  commentId String?
  createdAt DateTime @default(now())

  task    Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  comment Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  user    User     @relation(fields: [userId], references: [id])

  @@index([taskId])
  @@index([userId])
  @@index([commentId])
}
